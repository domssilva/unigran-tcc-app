from models import db
from models.vulnerability import Vulnerability

def create_vulnerability(description, severity, status, application):
    vuln = Vulnerability(
        description=description,
        severity=severity,
        status=status,
        application_id=application.id
    )
    db.session.add(vuln)
    application.vulnerabilities_count += 1
    db.session.commit()
    return vuln

def update_vulnerability(vuln, description, severity, status):
    vuln.description = description
    vuln.severity = severity
    vuln.status = status
    db.session.commit()
    return vuln

def get_vulnerability_stats(user_id):
    from models.vulnerability import Vulnerability
    from models.application import Application
    from sqlalchemy import func
    stats = {
        "total": 0,
        "status": {},
        "severity": {}
    }
    query = db.session.query(Vulnerability.status, func.count()).join(Application).filter(Application.user_id == user_id).group_by(Vulnerability.status)
    stats["status"] = dict(query.all())
    query = db.session.query(Vulnerability.severity, func.count()).join(Application).filter(Application.user_id == user_id).group_by(Vulnerability.severity)
    stats["severity"] = dict(query.all())
    stats["total"] = sum(stats["status"].values())
    return stats

def delete_vulnerability(vuln):
    app = vuln.application
    db.session.delete(vuln)
    db.session.commit()

    # Reconta após exclusão
    app.vulnerabilities_count = Vulnerability.query.filter_by(application_id=app.id).count()
    db.session.commit()